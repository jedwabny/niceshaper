# NiceShaper second configuration file.

##############
# Introduction
###

# This file contains definitions of hosts or classes (or both).
#
# Are you asking which one is better to use (hosts or classes)?
# Host directive is introduced for simplicity and is sufficient in most cases.
# Use hosts if you do not need advancements and flexibility of classes.

##########################
# Configuration with hosts
###

# To make the host directive works, at first it's needed to complete the 
# auto-hosts directive placed within the config.conf file in the global section.
# Then, it's completely enough to just write down the list of all LAN hosts.
#
# The syntax of host directive is:

# host ip_address assigned_name

# For example:

# host 192.168.0.10 pc10
# host 192.168.0.11 pc11
# host 192.168.0.12 pc12
# etc...

# It's all what is needed to start working with NiceShaper.
#
# It's worth to know that NiceShaper, internally, translates the host directive
# into the NiceShaper classes. It means that host is just macro of NiceShaper.
#
# After first run, if you want to know more (e.g. learn classes),
# read the rest of this configuration file and then the documentation as well.
# Hosts and classes are fully explained
# in the "Hosts and classes in NiceShaper" part of documentation.

############################
# Configuration with classes
###

# Firstly, it's suggested to create the class responsible for manage the traffic
# that is outgoing locally from the router machine to the local LAN network.
# It's obvious that the local traffic shouldn't be shaped or might be slightly shaped 
# but the observed traffic shouldn't be accounted like the traffic from the Internet is.
# Use class-wrapper instead of class-do-not-shape if some limiting is expected.
# Traffic of both of these class types is not monitored by dynamic shaping algorithm.
#
# Uncomment two lines below (class header and filter), 
# fix LAN interface, IP address of the router and LAN network subnet.

# class-do-not-shape eth1 router-to-lan
#    match from-local 192.168.0.1 dstip 192.168.0.0/24

# However, class for local traffic has to be placed at the beginning
# of classes list, thus needs to be moved into the beginning of this file 
# if configuration approach with hosts is used.
#
# It's time to explain how to achieve the same functionality,
# as with host directive, using classes.
#
# The syntax of standard class and one required filter is:

# class section interface assigned_name
#	match test value [test value]

# For example, the classes which fully substitute the host called pc10 (written above):

# class dl eth1 pc10
#	match dstip 192.168.0.10
# class ul eth0 pc10
#	match srcip 192.168.0.10

# Now add the rest of hosts or classes (or both), 
# and then execute the niceshaper start command.
#
# Beware, each host in local network which generates the traffic has to be known for
# NiceShaper, otherwise the dynamic traffic shaping algorithm won't work properly!

